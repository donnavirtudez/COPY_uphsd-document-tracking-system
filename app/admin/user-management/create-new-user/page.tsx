"use client";
import React, { useState } from "react";
import styles from "./createNewUser.module.css";
import AdminHeader from "@/components/shared/adminHeader";
import Link from "next/link";

export default function CreateNewUser() {
  const departmentOptions = [
    "Select",
    "Information Technology",
    "Medicine",
    "Business",
    "Human Resource",
  ];

  const roleOptions = ["Select", "Employee", "Admin"];

  const [selectedDepartment, setSelectedDepartment] = useState(departmentOptions[0]);
  const [selectedRole, setSelectedRole] = useState(roleOptions[0]);
  const [email, setEmail] = useState("");

  const [isDeptOpen, setIsDeptOpen] = useState(false);
  const [isRoleOpen, setIsRoleOpen] = useState(false);

  const autoGeneratedPassword = Math.floor(10000000 + Math.random() * 90000000).toString();


  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    const payload = {
      email,
      department: selectedDepartment,
      role: selectedRole,
      password: autoGeneratedPassword,
    };

    console.log("Submitting new user:", payload);
    // API call here
  };

  const handleClear = () => {
    setEmail("");
    setSelectedDepartment("Select Department");
    setSelectedRole("Select Role");
  };

  return (
    <div className={styles.container}>
      <AdminHeader />
      <div className={styles.contentContainer}>
        <div className={styles.formWrapper}>
          <h2 className={styles.title}>Create New User</h2>
          <hr className={styles.separator} />
          <div className={styles.sectionTitle}>Information</div>

          <form onSubmit={handleSubmit}>
            {/* Email */}
            <div className={styles.inputGroup}>
              <label>Email</label>
              <input
                type="email"
                placeholder="Enter user email"
                className={styles.inputField}
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </div>

            {/* Role */}
            <div className={styles.inputGroup}>
              <label>Role</label>
              <div className={styles.dropdown}>
                <button
                  type="button"
                  className={styles.dropdownButton}
                  onClick={() => setIsRoleOpen(!isRoleOpen)}
                >
                  {selectedRole}
                </button>
                {isRoleOpen && (
                  <div className={styles.dropdownList}>
                    {roleOptions.map((role) => (
                      <div
                        key={role}
                        onClick={() => {
                          setSelectedRole(role);
                          setIsRoleOpen(false);
                        }}
                        className={styles.dropdownItem}
                      >
                        {role}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>

            {/* Department */}
            <div className={styles.inputGroup}>
              <label>Department</label>
              <div className={styles.dropdown}>
                <button
                  type="button"
                  className={styles.dropdownButton}
                  onClick={() => setIsDeptOpen(!isDeptOpen)}
                >
                  {selectedDepartment}
                </button>
                {isDeptOpen && (
                  <div className={styles.dropdownList}>
                    {departmentOptions.map((dept) => (
                      <div
                        key={dept}
                        onClick={() => {
                          setSelectedDepartment(dept);
                          setIsDeptOpen(false);
                        }}
                        className={styles.dropdownItem}
                      >
                        {dept}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>

            <hr className={styles.separator} />
              <div className={styles.temporaryPasswordContainer}>
                        <h1 className={styles.sectionTitle}>Auto-Generated Password</h1>

                        <div className={styles.temporaryPasswordSection}>
                          <p>Temporary Password</p>
                          <div className={styles.temporaryPasswordHolder}>202250709</div>
                          <p>User must change password on first login</p>
                        </div>
                      </div>
          

            <div className={styles.buttonGroup}>
              <div className={styles.leftButtons}>
                <Link href="./my-documents">
                  <button className={styles.backBtn} type="button">Back</button>
                </Link>
              </div>
              <div className={styles.rightButtons}>
                <button className={styles.clearBtn} onClick={handleClear} type="button">
                  Clear
                </button>
                <button className={styles.submitBtn} type="submit">
                  Submit
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}
