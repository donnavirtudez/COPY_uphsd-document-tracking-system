generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// USER TABLE
model User {
  UserID         Int        @id @default(autoincrement())
  FirstName      String
  LastName       String
  Email          String     @unique 
  Password       String     
  MobileNumber   String
  Sex            String     
  RoleID         Int
  DepartmentID   Int?      
  PositionID     Int
  EmployeeID     String     @unique 
  ProfilePicture String?    
  IsActive       Boolean    @default(true)
  IsDeleted      Boolean    @default(false)
  CreatedAt      DateTime   @default(now())
  UpdatedAt      DateTime   @updatedAt

  // Relations
  Role           Role       @relation(fields: [RoleID], references: [RoleID])
  Department     Department?@relation(fields: [DepartmentID], references: [DepartmentID])
  Position       Position   @relation(fields: [PositionID], references: [PositionID])
  Documents      Document[] @relation("CreatedDocuments")
  RequestsMade   DocumentRequest[] @relation("RequestsMade")
  RequestsFor    DocumentRequest[] @relation("RequestsFor")
  Signatures     ESignature[]
  VersionChanges DocumentVersion[]
  SentNotifs     Notification[] @relation("SentNotifs")
  ReceivedNotifs Notification[] @relation("ReceivedNotifs")
  ActivityLogs   ActivityLog[]
}

/// ROLE TABLE
model Role {
  RoleID    Int     @id @default(autoincrement())
  RoleName  String
  IsDeleted Boolean @default(false)

  Users     User[]
}

/// POSITION TABLE
model Position {
  PositionID Int     @id @default(autoincrement())
  Name       String
  IsDeleted  Boolean @default(false)

  Users      User[]
}

/// DEPARTMENT TABLE
model Department {
  DepartmentID Int     @id @default(autoincrement())
  Name         String
  IsDeleted    Boolean @default(false)

  Users        User[]
  Documents    Document[]
}

/// DOCUMENT TYPE TABLE
model DocumentType {
  TypeID     Int       @id @default(autoincrement())
  TypeName   String
  IsDeleted  Boolean   @default(false)

  Documents  Document[]
}

/// DOCUMENT TABLE
model Document {
  DocumentID   Int        @id @default(autoincrement())
  Title        String
  TypeID       Int
  Description  String
  CreatedBy    Int
  DepartmentID Int?
  CreatedAt    DateTime   @default(now())
  UpdatedAt    DateTime   @updatedAt
  Status       String     @default("Active") 
  IsDeleted    Boolean    @default(false)

  // Relations
  Creator      User       @relation("CreatedDocuments", fields: [CreatedBy], references: [UserID])
  DocumentType DocumentType @relation(fields: [TypeID], references: [TypeID])
  Department   Department?  @relation(fields: [DepartmentID], references: [DepartmentID])
  Requests     DocumentRequest[]
  Versions     DocumentVersion[]
}

/// DOCUMENT REQUEST TABLE
model DocumentRequest {
  RequestID        Int       @id @default(autoincrement())
  RequestedByID    Int
  RecipientUserID  Int
  DocumentID       Int
  StatusID         Int
  RequestedAt      DateTime  @default(now())
  CompletedAt      DateTime? 
  Priority         String   
  Remarks          String?
  IsDeleted        Boolean   @default(false)

  // Relations
  RequestedBy      User      @relation("RequestsMade", fields: [RequestedByID], references: [UserID])
  Recipient        User      @relation("RequestsFor", fields: [RecipientUserID], references: [UserID])
  Document         Document  @relation(fields: [DocumentID], references: [DocumentID])
  Status           Status    @relation(fields: [StatusID], references: [StatusID])
  Signature        ESignature?
}

/// STATUS TABLE
model Status {
  StatusID   Int                @id @default(autoincrement())
  StatusName String
  IsDeleted  Boolean            @default(false)

  Requests   DocumentRequest[]
}

/// ACTIVITY LOG
model ActivityLog {
  LogID        Int      @id @default(autoincrement())
  PerformedBy  Int
  Action       String
  TargetType   String
  TargetID     Int
  Remarks      String?
  Timestamp    DateTime @default(now())
  IsDeleted    Boolean  @default(false)

  User         User     @relation(fields: [PerformedBy], references: [UserID])
}

/// E-SIGNATURE TABLE
model ESignature {
  ESignatureID  Int             @id @default(autoincrement())
  RequestID     Int             @unique
  SignedBy      Int
  SignatureData String
  SignedAt      DateTime
  IsDeleted     Boolean         @default(false)

  Request       DocumentRequest @relation(fields: [RequestID], references: [RequestID])
  Signer        User            @relation(fields: [SignedBy], references: [UserID])
}

/// DOCUMENT VERSION TABLE
model DocumentVersion {
  VersionID         Int       @id @default(autoincrement())
  DocumentID        Int
  VersionNumber     Int
  ChangedBy         Int
  ChangeDescription String
  FilePath          String?
  CreatedAt         DateTime  @default(now())
  IsDeleted         Boolean   @default(false)

  Document          Document  @relation(fields: [DocumentID], references: [DocumentID])
  ChangedByUser     User      @relation(fields: [ChangedBy], references: [UserID])
}

/// NOTIFICATION TABLE
model Notification {
  NotificationID Int      @id @default(autoincrement())
  SenderID       Int
  ReceiverID     Int
  Title          String
  Message        String
  IsRead         Boolean  @default(false)
  CreatedAt      DateTime @default(now())
  ReadAt         DateTime?
  IsDeleted      Boolean  @default(false)

  Sender         User     @relation("SentNotifs", fields: [SenderID], references: [UserID])
  Receiver       User     @relation("ReceivedNotifs", fields: [ReceiverID], references: [UserID])
}
